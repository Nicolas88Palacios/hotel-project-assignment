
DROP DATABASE IF EXISTS Library;
CREATE DATABASE Library;
USE Library;

CREATE TABLE book (
bookID INT PRIMARY KEY AUTO_INCREMENT,
title VARCHAR(200) NOT NULL,
ISBN VARCHAR(200) NOT NULL,
publishingDate INT,
rating FLOAT (10) NOT NULL

) AUTO_INCREMENT = 1001; 

CREATE TABLE member  (
memberID INT PRIMARY KEY AUTO_INCREMENT,
firstName VARCHAR(50) NOT NULL,
lastName VARCHAR(50) NOT NULL

) AUTO_INCREMENT = 1001;

CREATE TABLE author (
authorID INT PRIMARY KEY AUTO_INCREMENT,
firstName VARCHAR(50) NOT NULL,
lastName VARCHAR(50) NOT NULL

) AUTO_INCREMENT = 1001; 

CREATE TABLE inventory (
inventoryID INT PRIMARY KEY AUTO_INCREMENT,
bookID INT,
available BOOLEAN NOT NULL DEFAULT TRUE,

FOREIGN KEY (bookID) REFERENCES book(bookID) ON DELETE SET NULL
) AUTO_INCREMENT = 1001; 

CREATE TABLE borrow ( 
borrowID INT NOT NULL AUTO_INCREMENT,
inventoryID INT NOT NULL,
memberID INT NOT NULL,
startDate DATETIME, 
returnDate DATETIME DEFAULT NULL,
actualReturnDate DATETIME,
PRIMARY KEY (borrowID), 
FOREIGN KEY (memberID) REFERENCES member(memberID) ON DELETE CASCADE,
FOREIGN KEY (inventoryID) REFERENCES inventory(inventoryID) ON DELETE CASCADE
)AUTO_INCREMENT = 1001;

CREATE TRIGGER returnDate BEFORE INSERT ON borrow
FOR EACH ROW
SET NEW.returnDate = DATE_ADD(curdate(),INTERVAL 21 DAY);

CREATE TABLE book_author ( 
bookID INT NOT NULL,
authorID INT NOT NULL, 
FOREIGN KEY (bookID) REFERENCES book(bookID) ON DELETE CASCADE,
FOREIGN KEY (authorID) REFERENCES author(authorID) ON DELETE CASCADE,
PRIMARY KEY (bookID, authorID)
);








